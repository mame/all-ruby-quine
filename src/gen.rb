font = <<END
###############
###############
###############
###############
###############
####       ####
###############
###############
###############
###############
###############

###############
###############
###############
###############
###############
###############
###############
###############
######   ######
######   ######
###############

###############
###############
###############
###############
###############
###############
###############
###############
###############
##           ##
###############

###############
####       ####
##    ###    ##
##   #####   ##
##   #####   ##
##   #####   ##
##   #####   ##
##   #####   ##
##    ###    ##
####       ####
###############

###############
#####    ######
####     ######
###  #   ######
######   ######
######   ######
######   ######
######   ######
######   ######
###         ###
###############

###############
###         ###
##   #####   ##
##########   ##
##########   ##
########    ###
######    #####
####    #######
##    #########
##           ##
###############

###############
###        ####
##   ####   ###
##########   ##
#########   ###
####       ####
#########   ###
##########   ##
##   ####   ###
###        ####
###############

###############
######     ####
#####      ####
####   #   ####
###   ##   ####
##   ###   ####
##   ###   ####
##           ##
########   ####
########   ####
###############

###############
##           ##
##   ##########
##   ##########
##   ##########
##          ###
#########    ##
##########   ##
##   ####    ##
###         ###
###############

###############
######       ##
###     #######
##   ##########
##   ##########
##          ###
##   ####    ##
##   #####   ##
##    ###    ##
###         ###
###############

###############
##           ##
#########    ##
#########    ##
########    ###
#######    ####
######    #####
#####    ######
####    #######
###    ########
###############

###############
###         ###
##   #####   ##
##   #####   ##
###   ###   ###
####       ####
###   ###   ###
##   #####   ##
##   #####   ##
###         ###
###############

###############
###         ###
##    ###    ##
##   #####   ##
##    ####   ##
###          ##
##########   ##
##########   ##
##   ####    ##
###         ###
###############

###############
###############
###############
###        ####
##   ####    ##
##########   ##
###          ##
##   #####   ##
##   ####    ##
###      #   ##
###############

###############
##   ##########
##   ##########
##   ##########
##   #      ###
##    ###    ##
##   #####   ##
##   #####   ##
##   ####    ##
##          ###
###############

###############
###############
###############
####        ###
###   ####   ##
##   ##########
##   ##########
##   ##########
###   ####   ##
####        ###
###############

###############
##########   ##
##########   ##
##########   ##
####         ##
###   ####   ##
##   #####   ##
##   #####   ##
##    ###    ##
###      #   ##
###############
END

# raw font data
s = font.split("\n\n").map {|s| s.split("\n")[1..-2].map {|s| s[2..-3] } }.join.tr("# ", "10")

# padding
s = "111" + s
s << "1" while s.size % 6 != 0

font = s.scan(/.{6}/).map do |c|
  x = c.reverse.to_i(2)
  x < 63 ? x + 64 : 63
end.pack("C*")

raise if font.include?("\\")

# find the minimum code for font decompression
a = ["f='#{ font }'.unpack('c*')"]

2.upto(12) do |n|
  code = "f='?'*#{ n };f=('#{ font.gsub('?'*n) { "'+f+'" } }').unpack('c*')"
  code = code.gsub("(''+", "(")
  code = code.gsub("+''+", "+")
  code = code.gsub(/(\+f){3,}/) { "+f*#{ $&.size / 2 }" }
  a << code
end

code = "f=('#{ font.gsub(/\?{8,}/) { "'+'?'*#{ $&.size }+'" } }').unpack('c*')"
code = code.gsub("(''+", "(")
code = code.gsub("+''+", "+")

a << code

code = "f='?';f=('#{ font.gsub(/\?{8,}/) { "'+f*#{ $&.size }+'" } }').unpack('c*')"
code = code.gsub("(''+", "(")
code = code.gsub("+''+", "+")

a << code

font = a.min_by {|code| code.size }

# generate the code
s = File.read(File.join(__dir__, "code.rb")).split.join
s = s.gsub("FONT") { font }
s = s.gsub("SIZ") { s.size }
s = %(eval($s=("#{ s }").split.join)#)
s = File.read(File.join(__dir__, "tmpl.txt")).gsub("#") { s.slice!(0, 1) }
File.write(File.join(File.dirname(__dir__), "all-ruby-quine.rb"), s)
